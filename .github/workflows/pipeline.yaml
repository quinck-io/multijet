name: Pipeline

on:
    workflow_dispatch:
    push:
        branches:
            - "**"
        tags:
            - "**"
    pull_request:
        branches:
            - master

concurrency:
    group: ${{ github.workflow }}-${{ github.ref_name }}
    cancel-in-progress: false

env:
    PROJECT_NAME: ${{ github.event.repository.name }}
    NODE_VERSION: 20

jobs:
    qa:
        name: Quality Assurance
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install dependencies
              run: npm ci

            - name: Lint
              run: npm run lint

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            # Check the Quality Gate status.
            - name: SonarQube Quality Gate check
              id: sonarqube-quality-gate-check
              uses: sonarsource/sonarqube-quality-gate-action@master
              # Force to fail step after specific time.
              timeout-minutes: 5
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: https://sonarcloud.io

            - name: Notify Discord
              if: always()
              uses: quinck-io/actions-notify-discord@v2.0.2
              with:
                  webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
                  status: ${{ job.status }}
                  projectName: ${{ env.PROJECT_NAME }}
                  sonarProjectKey: quinck-io_${{ github.event.repository.name }}
                  sonarQualityGateStatus: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}

    publish:
        name: Publish
        runs-on: ubuntu-latest
        needs: qa
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install dependencies
              run: npm ci

            - name: Build CLI
              run: npm run build:cli

            - name: Publish to NPM
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: |
                  echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

                  PUBLISHED_VERSION=$(npm show multijet version)
                  PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
                  if [ "${PUBLISHED_VERSION}" = "${PACKAGE_VERSION}" ]; then
                    echo "The current package version has already been published"
                  else
                    echo "Do pubblication"
                    npm publish --access public
                  fi

            - name: Notify Discord
              if: always()
              uses: quinck-io/actions-notify-discord@v2.0.2
              with:
                  webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
                  status: ${{ job.status }}
                  projectName: ${{ env.PROJECT_NAME }}
